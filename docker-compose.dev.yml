services:
  web:
    build: .
    command: sh -c "while ! python -c 'import socket; socket.create_connection((\"db\", 5432))' 2>/dev/null; do echo 'Waiting for database...'; sleep 1; done; echo 'Database is ready!'; uv run python manage.py migrate && uv run python manage.py seed_all && uv run python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    volumes:
      # Mount only source code directories, excluding virtual environments
      - ./fables:/app/fables
      - ./accounts:/app/accounts
      - ./campaigns:/app/campaigns
      - ./home:/app/home
      - ./templates:/app/templates
      - ./static:/app/static
      - ./manage.py:/app/manage.py
      - ./pyproject.toml:/app/pyproject.toml
      # Exclude these from local bind mount to prevent conflicts
      - web_venv:/app/.venv
      - web_uv:/app/.uv
    environment:
      DEBUG: ${DEBUG}
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      VERBOSE_LOGGING: ${VERBOSE_LOGGING}
    depends_on:
      - db
    stdin_open: true
    tty: true
    develop:
      watch:
        - action: sync
          path: ./fables
          target: /app/fables
        - action: sync
          path: ./accounts
          target: /app/accounts
        - action: sync
          path: ./campaigns
          target: /app/campaigns
        - action: sync
          path: ./home
          target: /app/home
        - action: sync
          path: ./templates
          target: /app/templates
        - action: sync
          path: ./static
          target: /app/static
        - action: sync
          path: ./manage.py
          target: /app/manage.py
        - action: rebuild
          path: ./pyproject.toml

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5433:5432"

  pgadmin:
    image: dpage/pgadmin4:latest
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  web_venv:
  web_uv:
  postgres_data:
  pgadmin_data: